<?php
/**
 * @file
 * Backdrop module for RefTagger (https://reftagger.com/).
 */

/**
 * Implements hook_permission().
 */
function reftagger_permission() {
  return array(
    'administer reftagger' => array(
      'title' => t('Administer Reftagger'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function reftagger_menu() {
  $items['admin/config/services/reftagger'] = array(
    'title' => 'RefTagger',
    'description' => t('Configure the settings for RefTagger on your site.'),
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('reftagger_admin_settings_form'),
    'access arguments' => array('administer reftagger'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_config_info().
 */
function reftagger_config_info() {
  $prefixes['reftagger.settings'] = array(
    'label' => t('RefTagger settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements hook_admin_settings() for configuring the module().
 */
function reftagger_admin_settings_form() {
  $config = config('reftagger.settings');
  $version_options = reftagger_bible_versions();
  $form['#config'] = 'reftagger.settings';
  $form['reftagger_bible_version'] = array(
    '#type' => 'select',
    '#title' => t('Default Bible Version'),
    '#options' => $version_options,
    '#default_value' => $config->get('reftagger_bible_version'),
    '#description' => t('Select a default Bible version to use. All versions will work as the default (Genesis 1:1) but not all will work when entered with the bible reference as an override. For example, Genesis 1:1 (NIV) will work but Genesis 1:1 (RSV) will not work). Look for the short code in square brackets after the name. Note that the Greek versions are New Testament only.'),
  );
  $form['reftagger_bible_reader'] = array(
    '#type' => 'select',
    '#title' => t('Online Bible reader'),
    '#options' => array(
      'biblia' => t('Biblia'),
      'bible.faithlife' => t('Faithlife Study Bible'),
    ),
    '#default_value' => $config->get('reftagger_bible_reader'),
  );
  $form['reftagger_case_insensitive'] = array(
    '#type' => 'checkbox',
    '#title' => t('Case Insensitive?'),
    '#default_value' => $config->get('reftagger_case_insensitive') ? 1 : 0,
    '#description' => t('By default Reftagger only tags references using proper name capitalization (2 Corinthians 5:20). Check this to make Reftagger case insensitive (2 corinthians 5:20, 2 CORINTHIANS 5:20).'),
  );
  $form['reftagger_social_sharing'] = array(
    '#type' => 'select',
    '#multiple' => TRUE,
    '#title' => t('Social sharing'),
    '#options' => _reftagger_get_social_sharing_options(),
    '#default_value' => $config->get('reftagger_social_sharing'),
    '#description' => t('Select which social icons to appear in tool-tip.'),
  );
  $form['reftagger_chapter_tagging'] = array(
    '#type' => 'checkbox',
    '#title' => t('Chapter-level tagging'),
    '#description' => t('Enables tagging of chapters without verses (e.g. Genesis 12).'),
    '#default_value' => $config->get('reftagger_chapter_tagging'),
  );
  $form['reftagger_link_target'] = array(
    '#type' => 'radios',
    '#title' => t('Links open in'),
    '#options' => array(
      t('Existing window'),
      t('New window'),
    ),
    '#default_value' => $config->get('reftagger_link_target'),
  );
  $form['reftagger_tooltip_enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show ToolTips'),
    '#default_value' => $config->get('reftagger_tooltip_enable'),
    '#description' => t('Show a tooltip containing verse text when the mouse hovers over a reference.'),
  );

  $form['logos'] = array(
    '#type' => 'fieldset',
    '#title' => t('Logos integration'),
    '#collapsible' => FALSE,
  );
  $form['logos']['reftagger_logos_icon_link'] = array(
    '#type' => 'checkbox',
    '#title' => t('Add Logos buttons to tooltip'),
    '#default_value' => $config->get('reftagger_logos_icon_link'),
    '#description' => t('Insert an icon linking to the verse in Logos Bible Software (if available).'),
  );
  $dark_icon = '<img src="https://www.logos.com/images/Corporate/LibronixLink_dark.png" />';
  $light_icon = '<img src="https://www.logos.com/images/Corporate/LibronixLink_light.png" />';
  $form['logos']['reftagger_logos_icon_type'] = array(
    '#type' => 'radios',
    '#title' => t('Logos link icons'),
    '#options' => array(
      'light' => $light_icon . t(' Light (for sites with dark backgrounds)'),
      'dark' => $dark_icon . t(' Dark (for sites with light backgrounds)'),
    ),
    '#default_value' => $config->get('reftagger_logos_icon_type'),
    '#states' => array(
      'visible' => array(
        ':input[name="reftagger_logos_icon_link"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['logos']['reftagger_logos_icon_add'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Reftagger on existing Biblia links'),
    '#default_value' => $config->get('reftagger_logos_icon_add'),
  );

  $form['exclusions'] = array(
    '#type' => 'fieldset',
    '#title' => t('Exclusions'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['exclusions']['reftagger_exclude_tags'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Exclude tags'),
    '#default_value' => $config->get('reftagger_exclude_tags'),
    '#options' => reftagger_tags(),
    '#description' => t('Do not search these HTML tags.'),
  );
  $form['exclusions']['reftagger_exclude_classes'] = array(
    '#type' => 'textfield',
    '#title' => t('Exclude classes'),
    '#default_value' => $config->get('reftagger_exclude_classes'),
    '#description' => t('A comma-separated list of HTML tag classes that should exclude RefTagger functionality'),
  );

  $form['styles'] = array(
    '#type' => 'fieldset',
    '#title' => t('General styling'),
    '#collapsible' => FALSE,
  );
  $form['styles']['reftagger_drop_shadow'] = array(
    '#type' => 'checkbox',
    '#title' => t('Drop shadow'),
    '#default_value' => $config->get('reftagger_drop_shadow'),
  );
  $form['styles']['reftagger_rounded_corners'] = array(
    '#type' => 'checkbox',
    '#title' => t('Rounded corners'),
    '#default_value' => $config->get('reftagger_rounded_corners'),
  );
  $form['styles']['reftagger_background_color'] = array(
    '#type' => 'radios',
    '#title' => t('Body background theme'),
    '#options' => array(
      'light' => t('Light'),
      'dark' => t('Dark'),
    ),
    '#default_value' => $config->get('reftagger_background_color'),
  );

  $styles = $config->get('reftagger_custom_styles');
  $form['reftagger_custom_styles'] = array(
    '#type' => 'fieldset',
    '#title' => t('Custom styles'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#tree' => TRUE,
  );
  $form['reftagger_custom_styles']['heading'] = array(
    '#type' => 'fieldset',
    '#title' => t('Heading'),
    '#collapsible' => FALSE,
  );
  $form['reftagger_custom_styles']['heading']['color'] = array(
    '#type' => 'color',
    '#size' => 10,
    '#title' => t('Color'),
    '#default_value' => isset($styles['heading']['color']) ? $styles['heading']['color'] : '#333',
    '#description' => t('Choose the text color for the heading.'),
    '#element_validate' => array('reftagger_validate_color_hex'),
  );
  $default_font_family = "Arial, 'Helvetica Neue', Helvetica, sans-seri";
  $form['reftagger_custom_styles']['heading']['fontFamily'] = array(
    '#type' => 'select',
    '#title' => t('Font'),
    '#default_value' => isset($styles['heading']['fontFamily'])
        ? $styles['heading']['fontFamily']
        : $default_font_family,
    '#options' => array(
      "Arial, 'Helvetica Neue', Helvetica, sans-serif" => 'Arial',
      "'Courier New', Courier, 'Lucida Sans Typewriter', 'Lucida Typewriter', monospace" => 'Courier New',
      "Georgia, Times, 'Times New Roman', serif" => 'Georgia',
      "Palatino, 'Palatino Linotype', 'Palatino LT STD', 'Book Antiqua', Georgia, serif" => 'Palantino',
      "Tahoma, Verdana, Segoe, sans-serif" => 'Tahoma',
      "TimesNewRoman, 'Times New Roman', Times, Baskerville, Georgia, serif" => 'Times New Roman',
      "Verdana, Geneva, sans-serif" => 'Verdana',
    ),
  );
  $form['reftagger_custom_styles']['heading']['fontSize'] = array(
    '#type' => 'select',
    '#title' => t('Font size'),
    '#default_value' => isset($styles['heading']['fontSize'])
        ? $styles['heading']['fontSize']
        : '14px',
    '#options' => backdrop_map_assoc(array('12px', '14px', '16px', '18px')),
  );
  $form['reftagger_custom_styles']['heading']['backgroundColor'] = array(
    '#type' => 'color',
    '#size' => 10,
    '#title' => t('Background color'),
    '#default_value' => isset($styles['heading']['backgroundColor']) ? $styles['heading']['backgroundColor'] : '#e7e7e7',
    '#description' => t('Choose the background color for the heading.'),
    '#element_validate' => array('reftagger_validate_color_hex'),
  );
  $form['reftagger_custom_styles']['body'] = array(
    '#type' => 'fieldset',
    '#title' => t('Body'),
    '#collapsible' => FALSE,
  );
  // The body color field re-uses everything except default value from the
  // heading color field.
  $form['reftagger_custom_styles']['body']['color'] = $form['reftagger_custom_styles']['heading']['color'];
  $form['reftagger_custom_styles']['body']['color']['#default_value'] = isset($styles['body']['color'])
      ? $styles['body']['color']
      : '#666';
  $form['reftagger_custom_styles']['body']['color']['#description'] = t('Choose the text color for the verse text.');

  // The body font family field re-uses everything except default value from the
  // heading font family field.
  $form['reftagger_custom_styles']['body']['fontFamily'] = $form['reftagger_custom_styles']['heading']['fontFamily'];
  $form['reftagger_custom_styles']['body']['fontFamily']['#default_value'] = isset($styles['body']['fontFamily'])
      ? $styles['body']['fontFamily']
      : $default_font_family;

  // The body font size field re-uses everything except default value from the
  // heading font size field.
  $form['reftagger_custom_styles']['body']['fontSize'] = $form['reftagger_custom_styles']['heading']['fontSize'];
  $form['reftagger_custom_styles']['body']['fontSize']['#default_value'] = isset($styles['body']['fontSize'])
      ? $styles['body']['fontSize']
      : '14px';

  // The link color field re-uses everything from heading color field, except
  // the default value and title.
  $form['reftagger_custom_styles']['body']['moreLink']['color'] = $form['reftagger_custom_styles']['heading']['color'];
  $form['reftagger_custom_styles']['body']['moreLink']['color']['#title'] = t('Link color');
  $form['reftagger_custom_styles']['body']['moreLink']['color']['#default_value'] = isset($styles['body']['moreLink']['color'])
      ? $styles['body']['moreLink']['color']
      : '#0080FF';
  $form['reftagger_custom_styles']['body']['moreLink']['color']['#description'] = t('Choose the link color for the "more" link.');
  return system_settings_form($form);
}

/**
 * #element_validate callback: Verifies HEX color value.
 *
 * The regex pattern shamelessly stolen from color.module's
 * color_valid_hexadecimal_string().
 *
 * @see color_valid_hexadecimal_string()
 */
function reftagger_validate_color_hex($element, &$form_state) {
  if (!preg_match('/^#([a-f0-9]{3}){1,2}$/iD', $element['#value'])) {
    form_error($element, t('This is not a valid HEX value. It must be in format <em>#ccc000</em> or <em>#ccc</em>.'));
  }
}

/**
 * Returns list of social networks options.
 *
 * @param bool $keys_only
 *   If true, only the keys of the list are returned.
 *
 * @return array
 *   Associative array, where keys are machine names and values are labels of
 *   social networks.
 */
function _reftagger_get_social_sharing_options($keys_only = FALSE) {
  $options = array(
    'twitter' => t('Twitter'),
    'facebook' => t('Facebook'),
    'faithlife' => t('Faithlife'),
  );

  return $keys_only?array_keys($options) : $options;
}

/**
 * Return an array of options for HTML tags to exclude
 */
function reftagger_tags() {
  return array(
    'b' => 'Bold/Strong',
    'i' => 'Italic/Emphasis',
    'u' => 'Underline',
    'ol' => 'Ordered List',
    'ul' => 'Unordered List',
    'span' => 'Span',
    'h1' => 'Header 1',
    'h2' => 'Header 2',
    'h3' => 'Header 3',
    'h4' => 'Header 4',
    'h5' => 'Header 5',
    'h6' => 'Header 6',
  );
}

/**
 * Implements hook_preprocess_page
 * Loads the script on every page
 */
function reftagger_preprocess_page(&$variables) {
  $config = config('reftagger.settings');
  if (path_is_admin(current_path())) {
    return;
  }

  $settings = array(
    'bibleVersion' => $config->get('reftagger_bible_version'),
    'linksOpenNewWindow' => (bool) $config->get('reftagger_link_target'),
    'useTooltip' => (bool) $config->get('reftagger_tooltip_enable'),
    'caseInsensitive' => (bool) $config->get('reftagger_case_insensitive'),
    'dropShadow' => (bool) $config->get('reftagger_drop_shadow'),
    'roundCorners' => (bool) $config->get('reftagger_rounded_corners'),
    'socialSharing' => array_values($config->get('reftagger_social_sharing')),
    'addLogosLink' => (bool) $config->get('reftagger_logos_icon_link'),
    'logosLinkIcon' => $config->get('reftagger_logos_icon_type'),
    'convertHyperlinks' => (bool) $config->get('reftagger_logos_icon_add'),
    'tagChapters' => (bool) $config->get('reftagger_chapter_tagging'),
    'tooltipStyle' => $config->get('reftagger_background_color'),
  );

  $exclude_tags = reftagger_exclude_tags();
  if (count($exclude_tags)) {
    $settings['noSearchTagNames'] = $exclude_tags;
  }

  $class_list = str_replace(' ', '', $config->get('reftagger_exclude_classes'));
  if (!empty($class_list)) {
    $settings['noSearchClassNames'] = explode(',', $class_list);
  }

  $bible_reader = $config->get('reftagger_bible_reader');
  if ($bible_reader !== 'biblia') {
    $settings['bibleReader'] = $bible_reader;
  }

  $styles = $config->get('reftagger_custom_styles');
  if ($styles) {
    $settings['customStyle'] = $styles;
  }

  backdrop_add_js(backdrop_get_path('module', 'reftagger') . '/js/reftagger.js','file');
  backdrop_add_js(array(
    'refTagger' => $settings,
  ),'setting');
  return $variables;
}

/**
 * Grab the exclude tags and add synonym tags
 */
function reftagger_exclude_tags() {
  $exclude_tags = config_get('reftagger.settings', 'reftagger_exclude_tags');
  foreach ($exclude_tags as $tag) {
    if ($tag) {
      $tags[] = $tag;
      if ($tag == 'b') {
        $tags[] = 'strong';
      }
      if ($tag == 'i') {
        $tags[] = 'em';
      }
    }
  }
  return $tags;
}

/**
 * Return an array list of Bible version options for tooltips
 */
function reftagger_bible_versions($abbr = FALSE) {
  return array(
    'English' => array(
      'ASV' => $abbr ? 'ASV' : 'American Standard Version [ASV]',
      'DAR' => $abbr ? 'DARBY' : '1890 Darby Bible [DAR][DARBY]',
      'ESV' => $abbr ? 'ESV' : 'English Standard Version [ESV]',
      'GW' => $abbr ? 'GW' : 'God\'s Word Translation [GW]',
      'GNB' => $abbr ? 'GNB' : 'The Good News Translation',
      'HCSB' => $abbr ? 'HCSB' : 'Holman Christian Standard Bible [HCSB]',
      'KJV' => $abbr ? 'KJV' : 'King James Version [KJV]',
      'LEB' => $abbr ? 'LEB' : 'Lexham English Bible [LEB]',
      'MESSAGE' => $abbr ? 'MESSAGE' : 'The Message [MESSAGE]',
      'NASB' => $abbr ? 'NASB' : 'New American Standard [NASB]',
      'NCV' => $abbr ? 'NCV' : 'New Century Version [NCV]',
      'GS-NETBIBLE' => $abbr ? 'NET' : 'The NET (New English Translation) Bible [NET]',
      'NIV' => $abbr ? 'NIV' : 'New International Version [NIV]',
      'NIRV' => $abbr ? 'NIRV' : 'New International Reader\'s Version [NIRV]',
      'NKJV' => $abbr ? 'NKJV' : 'New King James Version [NKJV]',
      'NLT' => $abbr ? 'NLT' : 'New Living Translation [NLT]',
      'NRSV' => $abbr ? 'NRSV' : 'New Revised Standard Version [NRSV]',
      'RSV' => $abbr ? 'RSV' : 'Revised Standard Version',
      'YLT' => $abbr ? 'YLT' : 'Young\'s Literal Translation [YLT]',
    ),
    'Arabic' => array(
      'AR-VANDYKE' => $abbr ? 'Arabic' : 'Arabic Bible (Smith & Van Dyke)',
    ),
    'Czech' => array(
      'CS-KR1579' => $abbr ? 'KR1579' : 'Podle Puvodního Vydání Kralického',
    ),
    'French' => array(
      'LSG' => $abbr ? 'LSG' : 'Louis Segond [LSG]',
      'S21' => $abbr ? 'S21' : 'La Bible Segond 21 [S21]',      
    ),
    'German' => array(
      'LUO1545' => $abbr ? 'LUO1545' : 'Luther Bibel (1545)',
      'LU1912' => $abbr ? 'LU1912' : 'Luther Bibel (1912)',
    ),
    'Greek' => array(
      'TISCH' => $abbr ? 'TISCH' : 'Novum Testamentum Graece [TISCH]',
      'TISCHNT' => $abbr ? 'TISCHNT' : 'Novum Testamentum Graece (Tischendorf)',
    ),
    'Hungarian' => array(
      'HU-BIBLE' => $abbr ? 'SZENT' : 'Szent Biblia [KAR]',
    ),
    'Italian' => array(
      'IT-DIODATI1649' => $abbr ? 'DIODATI' : 'Giovanni Diodati Bibbia',
    ),
    'Russian' => array(
      'RST' => $abbr ? 'RST' : 'Русский Синодальный Перевод (1876/1956)',
    ),
    'Spanish' => array(
      'RVA' => $abbr ? 'RVA' : 'Reina-Valera Actualizada',
      'NBLH' => $abbr ? 'NBLH' : 'Nueva Biblia de los Hispanos',
      'LBLA95' => $abbr ? 'LBLA' : 'La Biblia de las Américas',
    ),
  );
}
